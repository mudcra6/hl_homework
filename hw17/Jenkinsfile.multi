pipeline {
    agent {
        label 'worker-ubuntu'
    }
    stages {
        stage('Build Docker image') {
            steps {
                echo 'Building Docker image...'
                dir("hw17") {
                    script {
                        def imageName = "jenkins_test"
                        def imageTag = "latest"

                        // Build Docker image
                        sh "docker build -t $imageName:$imageTag ."

                        // Check if Docker image build was successful
                        def dockerImage = sh(script: "docker images -q $imageName:$imageTag", returnStdout: true).trim()
                        if (dockerImage) {
                            currentBuild.result = 'SUCCESS'
                            echo "Docker image $imageName:$imageTag built successfully."
                        } else {
                            currentBuild.result = 'FAILURE'
                            error "Failed to build Docker image $imageName:$imageTag."
                        }
                    }
                }
            }
        }
    }
    post {
        success {
            script {
                withCredentials([usernamePassword(credentialsId: 'github_token', usernameVariable: 'USERNAME', passwordVariable: 'PASSWORD')]) {
                    sh 'curl -X POST --user $USERNAME:$PASSWORD --data  "{\\"state\\": \\"success\\"}" --url $GITHUB_API_URL/statuses/$GIT_COMMIT'
                }
            }
        }
        failure {
            script {
                withCredentials([usernamePassword(credentialsId: 'github_token', usernameVariable: 'USERNAME', passwordVariable: 'PASSWORD')]) {
                    sh 'curl -X POST --user $USERNAME:$PASSWORD --data  "{\\"state\\": \\"failure\\"}" --url $GITHUB_API_URL/statuses/$GIT_COMMIT'
                }
            }
        }
    }
}
